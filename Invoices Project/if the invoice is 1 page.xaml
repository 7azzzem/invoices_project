<Activity mc:Ignorable="sap sap2010" x:Class="if_the_invoice_is_1_page" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="In_Sheetname" Type="InArgument(x:String)" />
  </x:Members>
  <sap:VirtualizedContainerService.HintSize>1017,2895</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="36">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.PDF.Activities</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.PDF.Activities.PDF</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Mail.SMTP.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Activities.Contracts</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="82">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.DocumentProcessing.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.DocumentUnderstanding.ML.Activities</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.OmniPage.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>UiPath.Activities.Contracts</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" sap2010:Annotation.AnnotationText="Description: &#xD;&#xA;using data scraping to get out the data from the pdf and then write it to the excel with the desired name and make the sheet also with the desired name using get text to know the invoice number and invoice date to write them in empty cells becaus they aren't included in the table then by calculating the row count making dynamic variable intger number to decide the position of the sub-total,GST 8% and total then upload them to the orchestator as queue items then delete the TOTAL range as it is not required.&#xA;then using outlook to send the attachments individually with special subject for each &#xD;&#xA;&#xD;&#xA;Pre-Condition:&#xA;Activated Excel version&#xD;&#xA;&#xD;&#xA;post-Action: &#xD;&#xA;*The data of the pdf files with one page will be extracted intro excel file with name &quot;customername_invoicenumber.xlsx&quot;&#xD;&#xA;*Emailed this excel files to it's destination  &#xD;&#xA;*The subtotal,GST,total are uploaded to the queue in the orchestator." DisplayName="if the invoice is 1 page attach window" sap:VirtualizedContainerService.HintSize="514,2830" sap2010:WorkflowViewState.IdRef="WindowScope_12" InformativeScreenshot="00cbcef6e24e37ec7cb08c887d6ca445" Selector="&lt;wnd app='acrord32.exe' cls='AcrobatSDIWindow' title='*.pdf - Adobe Acrobat Reader DC (32-*' /&gt;">
    <ui:WindowScope.Body>
      <ActivityAction x:TypeArguments="x:Object">
        <ActivityAction.Argument>
          <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
        </ActivityAction.Argument>
        <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="480,2417" sap2010:WorkflowViewState.IdRef="Sequence_33">
          <Sequence.Variables>
            <Variable x:TypeArguments="sd:DataTable" Name="Extracted2" />
            <Variable x:TypeArguments="x:String" Name="Invoice_num1" />
            <Variable x:TypeArguments="x:String" Name="Invoice_date1" />
            <Variable x:TypeArguments="sd:DataTable" Name="Row_count_data1" />
            <Variable x:TypeArguments="x:Int32" Name="Rowcount1" />
            <Variable x:TypeArguments="x:String" Name="Sub_total_value1" />
            <Variable x:TypeArguments="x:String" Name="GST_value1" />
            <Variable x:TypeArguments="x:String" Name="Total_value1" />
            <Variable x:TypeArguments="x:String" Name="subject" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:ExtractData DelayBetweenPagesMS="{x:Null}" NextLinkSelector="{x:Null}" ContinueOnError="True" DataTable="[Extracted2]" DisplayName="Extract Structured Data (1 page)" ExtractMetadata="&lt;extract-table get_columns_name='1' get_empty_columns='1' columns_name_source='Longest' /&gt;" sap:VirtualizedContainerService.HintSize="438,106" sap2010:WorkflowViewState.IdRef="ExtractData_14" MaxNumberOfResults="100" SimulateClick="True">
            <ui:ExtractData.Target>
              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="831b8aea-04ea-49c1-a8bb-09c84cc2fdc9" InformativeScreenshot="7b542760ced02bcf0a620ecc1ebd6366" Selector="&lt;wnd aaname='Document Pane' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd cls='AVL_AVView' title='AVPageView' /&gt;&lt;ctrl idx='2' role='table' /&gt;">
                <ui:Target.TimeoutMS>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:Target.TimeoutMS>
                <ui:Target.WaitForReady>
                  <InArgument x:TypeArguments="ui:WaitForReady" />
                </ui:Target.WaitForReady>
              </ui:Target>
            </ui:ExtractData.Target>
          </ui:ExtractData>
          <ui:WriteRange AddHeaders="True" sap2010:Annotation.AnnotationText="writing the resulted data output to  the excel naming it with the variable created in the main workflow as using sheetname as an argument " DataTable="[Extracted2]" DisplayName="Write Range of extracted table page 1 of 1" sap:VirtualizedContainerService.HintSize="438,172" sap2010:WorkflowViewState.IdRef="WriteRange_16" SheetName="[In_Sheetname]" StartingCell="A1" WorkbookPath="[In_Sheetname+&quot;.xlsx&quot;]">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:WriteRange>
          <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get invoice number" sap:VirtualizedContainerService.HintSize="438,106" sap2010:WorkflowViewState.IdRef="GetValue_3">
            <ui:GetValue.Target>
              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="ea89be49-eb35-480c-aa20-ed34462175bc" InformativeScreenshot="c79c75edd583270f622ddd1cbee6f2ed" Selector="&lt;wnd aaname='Document Pane' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd cls='AVL_AVView' title='AVPageView' /&gt;&lt;ctrl idx='2' role='row' /&gt;&lt;ctrl name='Invoice # * ' role='text' /&gt;">
                <ui:Target.TimeoutMS>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:Target.TimeoutMS>
                <ui:Target.WaitForReady>
                  <InArgument x:TypeArguments="ui:WaitForReady" />
                </ui:Target.WaitForReady>
              </ui:Target>
            </ui:GetValue.Target>
            <ui:GetValue.Value>
              <OutArgument x:TypeArguments="x:String">[Invoice_num1]</OutArgument>
            </ui:GetValue.Value>
          </ui:GetValue>
          <ui:WriteCell Cell="F1" DisplayName="Write invoice number Cell" sap:VirtualizedContainerService.HintSize="438,115" sap2010:WorkflowViewState.IdRef="WriteCell_3" SheetName="[In_Sheetname]" Text="[Invoice_num1]" WorkbookPath="[In_Sheetname+&quot;.xlsx&quot;]" />
          <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get invoice date" sap:VirtualizedContainerService.HintSize="438,106" sap2010:WorkflowViewState.IdRef="GetValue_5">
            <ui:GetValue.Target>
              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="c7fbcd59-952a-432d-a9f8-3bcacb49cd39" InformativeScreenshot="e105e785f24607579d0440c793e50122" Selector="&lt;wnd aaname='Document Pane' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd cls='AVL_AVView' title='AVPageView' /&gt;&lt;ctrl idx='2' role='row' /&gt;&lt;ctrl name='Invoice Date: * ' role='text' /&gt;">
                <ui:Target.TimeoutMS>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:Target.TimeoutMS>
                <ui:Target.WaitForReady>
                  <InArgument x:TypeArguments="ui:WaitForReady" />
                </ui:Target.WaitForReady>
              </ui:Target>
            </ui:GetValue.Target>
            <ui:GetValue.Value>
              <OutArgument x:TypeArguments="x:String">[invoice_date1]</OutArgument>
            </ui:GetValue.Value>
          </ui:GetValue>
          <ui:WriteCell Cell="F2" DisplayName="Write invoice date Cell" sap:VirtualizedContainerService.HintSize="438,115" sap2010:WorkflowViewState.IdRef="WriteCell_5" SheetName="[In_Sheetname]" Text="[Invoice_date1]" WorkbookPath="[In_Sheetname+&quot;.xlsx&quot;]" />
          <ui:ReadRange AddHeaders="True" DataTable="[Row_count_data1]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="438,87" sap2010:WorkflowViewState.IdRef="ReadRange_2" SheetName="[In_Sheetname]" WorkbookPath="[In_Sheetname+&quot;.xlsx&quot;]">
            <ui:ReadRange.Range>
              <InArgument x:TypeArguments="x:String">
                <Literal x:TypeArguments="x:String" Value="" />
              </InArgument>
            </ui:ReadRange.Range>
          </ui:ReadRange>
          <ui:ReadCell Cell="[&quot;E&quot;+(Row_count_data1.Rows.Cast(Of DataRow)().Where(Function(row) Not row.Item(&quot;PRICE&quot;) IsNot DBNull.Value Or row.Item(&quot;PRICE&quot;).ToString() &lt;&gt; &quot;&quot;).Count-1).toString]" DisplayName="Read sub-total Cell" sap:VirtualizedContainerService.HintSize="438,87" sap2010:WorkflowViewState.IdRef="ReadCell_1" SheetName="[In_Sheetname]" WorkbookPath="[In_Sheetname+&quot;.xlsx&quot;]">
            <ui:ReadCell.Result>
              <OutArgument x:TypeArguments="x:String">[sub_total_value1]</OutArgument>
            </ui:ReadCell.Result>
          </ui:ReadCell>
          <ui:ReadCell Cell="[&quot;E&quot;+(Row_count_data1.Rows.Cast(Of DataRow)().Where(Function(row) Not row.Item(&quot;PRICE&quot;) IsNot DBNull.Value Or row.Item(&quot;PRICE&quot;).ToString() &lt;&gt; &quot;&quot;).Count).toString]" DisplayName="Read GST 8% Cell" sap:VirtualizedContainerService.HintSize="438,87" sap2010:WorkflowViewState.IdRef="ReadCell_2" SheetName="[In_Sheetname]" WorkbookPath="[In_Sheetname+&quot;.xlsx&quot;]">
            <ui:ReadCell.Result>
              <OutArgument x:TypeArguments="x:String">[GST_value1]</OutArgument>
            </ui:ReadCell.Result>
          </ui:ReadCell>
          <ui:ReadCell Cell="[&quot;E&quot;+(Row_count_data1.Rows.Cast(Of DataRow)().Where(Function(row) Not row.Item(&quot;PRICE&quot;) IsNot DBNull.Value Or row.Item(&quot;PRICE&quot;).ToString() &lt;&gt; &quot;&quot;).Count+1).toString]" DisplayName="Read total Cell" sap:VirtualizedContainerService.HintSize="438,87" sap2010:WorkflowViewState.IdRef="ReadCell_3" SheetName="[In_Sheetname]" WorkbookPath="[In_Sheetname+&quot;.xlsx&quot;]">
            <ui:ReadCell.Result>
              <OutArgument x:TypeArguments="x:String">[total_value1]</OutArgument>
            </ui:ReadCell.Result>
          </ui:ReadCell>
          <ui:AddQueueItem ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Add Queue Item" sap:VirtualizedContainerService.HintSize="438,22" sap2010:WorkflowViewState.IdRef="AddQueueItem_1" Priority="Normal" QueueType="invoices_project">
            <ui:AddQueueItem.ItemInformation>
              <InArgument x:TypeArguments="x:String" x:Key="sub_total">[sub_total_value1]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="GST 8%">[GST_value1]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="total ">[total_value1]</InArgument>
            </ui:AddQueueItem.ItemInformation>
          </ui:AddQueueItem>
          <Assign sap:VirtualizedContainerService.HintSize="438,60" sap2010:WorkflowViewState.IdRef="Assign_6">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Int32">[rowcount1]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Int32">[Row_count_data1.Rows.Cast(Of DataRow)().Where(Function(row) Not row.Item("ID") IsNot DBNull.Value Or row.Item("ID").ToString() &lt;&gt; "").Count+1]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="438,333" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_2" InstanceCachePeriod="3000" WorkbookPath="[In_Sheetname]">
            <ui:ExcelApplicationScope.Body>
              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="326,224" sap2010:WorkflowViewState.IdRef="Sequence_36">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ExcelDeleteRange DisplayName="Delete Range" sap:VirtualizedContainerService.HintSize="284,132" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_2" Range="[&quot;E1:E&quot;+rowcount1.ToString]" SheetName="[In_Sheetname]" ShiftCells="False" ShiftOption="ShiftUp" />
                </Sequence>
              </ActivityAction>
            </ui:ExcelApplicationScope.Body>
          </ui:ExcelApplicationScope>
          <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="438,322" sap2010:WorkflowViewState.IdRef="TryCatch_1">
            <TryCatch.Try>
              <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" Body="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="334,145" sap2010:WorkflowViewState.IdRef="SendOutlookMail_1" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="[&quot;Course 2 Automation &quot; +In_Sheetname+&quot; details uploaded to queue&quot;]" To="ahmed.alhussieny97@gmail.com">
                <ui:SendOutlookMail.Files>
                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                    <InArgument x:TypeArguments="x:String">["C:\Users\"+Environment.Username+"\Desktop\invoices project\Invoices Project\"+In_Sheetname+".xlsx"]</InArgument>
                  </scg:List>
                </ui:SendOutlookMail.Files>
              </ui:SendOutlookMail>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="400,160" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Warn" Message="[exception.Message+&quot;_&quot;+exception.Source]" />
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
        </Sequence>
      </ActivityAction>
    </ui:WindowScope.Body>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
  </ui:WindowScope>
</Activity>